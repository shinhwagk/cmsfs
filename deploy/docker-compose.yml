version: "2.1"

services:
  consul:
    container_name: cmsfs_consul
    image: consul
    networks: 
      cmsfs:
        aliases: 
          - consul.cmsfs.org
    ports:
      - "8500:8500"
  
  config:
    build:
      context: ./
      dockerfile: Dockerfile-lagom
      args:
        SVC_NAME: config
    image: cmsfs/config
    container_name: cmsfs_config
    environment: 
      - SERVICE_NAME=config
      - SERVICE_PORT=9000
    networks: 
      - cmsfs
    depends_on:
      - consul
      - db

  monitor:
    build:
      context: ./
      dockerfile: Dockerfile-lagom
      args:
        SVC_NAME: monitor
    image: cmsfs/monitor
    container_name: cmsfs_monitor
    environment: 
      - SERVICE_NAME=monitor
      - SERVICE_PORT=9000
    networks: 
      - cmsfs
    depends_on:
      - consul
      - config
      - collect-ssh
      - collect-jdbc
      - format-analyze

  collect-ssh:
    build:
      context: ./
      dockerfile: Dockerfile-lagom
      args:
        SVC_NAME: collect-ssh
    image: cmsfs/collect-ssh
    environment: 
      - SERVICE_NAME=collect-ssh
      - SERVICE_PORT=9000
    volumes:
      - /root/.ssh/id_rsa:/root/.ssh/id_rsa
      - /etc/localtime:/etc/localtime
    networks: 
      - cmsfs
    depends_on: 
      - consul

  collect-jdbc:
    build:
      context: ./
      dockerfile: Dockerfile-lagom
      args:
        SVC_NAME: collect-jdbc
    image: cmsfs/collect-jdbc
    environment: 
      - SERVICE_NAME=collect-jdbc
      - SERVICE_PORT=9000
    volumes:
      - /etc/localtime:/etc/localtime
    networks: 
      - cmsfs
    depends_on: 
      - consul

  format-analyze:
    build:
      context: ./
      dockerfile: Dockerfile-lagom
      args:
        SVC_NAME: format-analyze
    image: cmsfs/format-analyze
    environment: 
      - SERVICE_NAME=format-analyze
      - SERVICE_PORT=9000
    volumes: 
      - /etc/localtime:/etc/localtime
    networks: 
      - cmsfs
    depends_on: 
      - consul

  db:
    container_name: cmsfs_db
    image: mysql
    expose:
      - "3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123456aA+
    volumes:
      # - /var/lib/mysql:/var/lib/mysql
      - /etc/localtime:/etc/localtime
    depends_on: 
      - consul
    networks: 
      cmsfs:
        aliases: 
          - db.cmsfs.org
    healthcheck:
      test: ["CMD-SHELL", "ss -lt | grep mysql"]
      interval: 3s
      timeout: 2s
      retries: 10

  db_data:
    container_name: cmsfs_db_data
    image: mysql
    volumes:
      - ./db/:/opt/
    command: sh -c "/opt/load.sh"
    networks: 
      - cmsfs
    depends_on:
      db:
        condition: service_healthy

  # cadvisor:
  #   container_name: cmsfs_cadvisor
  #   image: google/cadvisor:latest
  #   volumes: 
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   networks: 
  #     - cmsfs
  #   ports: 
  #     - "8080:8080"

  grafana:
    container_name: cmsfs_grafana
    image: grafana/grafana
    networks: 
     - cmsfs
    volumes: 
      - /etc/localtime:/etc/localtime
    ports: 
      - "3000:3000"
    environment: 
      - GF_SECURITY_ADMIN_PASSWORD=123456aA+ 

  elasticsearch:
    container_name: cmsfs_elasticsearch
    image: elasticsearch
    networks: 
      cmsfs:
        aliases: 
          - elasticsearch.cmsfs.org
    environment: 
      - SERVICE_NAME=elastic-search
      - SERVICE_PORT=9200
    volumes:
      - ./register.sh:/register.sh
      - /etc/localtime:/etc/localtime
    entrypoint: sh -c "/register.sh && /docker-entrypoint.sh elasticsearch"
    ports: 
      - "9200:9200"
    depends_on: 
      - consul

  # kibana:
  #   container_name: cmsfs_kibana
  #   image: kibana
  #   networks: 
  #     - cmsfs
  #   volumes:
  #     - /etc/localtime:/etc/localtime
  #   ports:
  #     - "5601:5601"
  #   depends_on: 
  #     - elasticsearch

networks: 
   cmsfs:
    driver: bridge