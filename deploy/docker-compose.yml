version: "2.1"

services:
  consul:
    container_name: cmsfs_consul
    image: consul
    networks: 
      cmsfs:
        aliases: 
          - consul.cmsfs.org
    ports:
      - "8500:8500"

  config:
    container_name: cmsfs_config
    image: cmsfs/config
    environment: 
      - SERVICE_NAME=config
      - SERVICE_PORT=9000
    build:
      context: ./
      dockerfile: Dockerfile-lagom
      args:
        SVC_NAME: config
    networks: 
      - cmsfs
    depends_on:
      - consul
      - db

  monitor:
    container_name: cmsfs_monitor
    build:
      context: ./
      dockerfile: Dockerfile-lagom
      args:
        SVC_NAME: monitor
    image: cmsfs/monitor
    environment: 
      - SERVICE_NAME=monitor
      - SERVICE_PORT=9000
    networks: 
      - cmsfs
    depends_on:
      - consul
      - config

  collect-ssh:
    build:
      context: ./
      dockerfile: Dockerfile-lagom
      args:
        SVC_NAME: collect-ssh
    image: cmsfs/collect-ssh
    environment: 
      - SERVICE_NAME=collect-ssh
      - SERVICE_PORT=9000
    volumes:
      - /root/.ssh/id_rsa:/root/.ssh/id_rsa
    networks: 
      - cmsfs
    depends_on: 
      - consul

  db:
    container_name: cmsfs_db
    image: mysql
    expose:
      - "3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123456aA+
    volumes:
      - /var/lib/mysql:/var/lib/mysql
    depends_on: 
      - consul
    networks: 
      cmsfs:
        aliases: 
          - db.cmsfs.org
    healthcheck:
      test: ["CMD-SHELL", "ss -lt | grep mysql"]
      interval: 3s
      timeout: 2s
      retries: 10

  db_data:
    container_name: cmsfs_db_data
    image: mysql
    volumes:
      - ./db/:/opt/
    command: sh -c "/bin/bash /opt/load.sh"
    depends_on:
      db:
        condition: service_healthy

  cadvisor:
    container_name: cmsfs_cadvisor
    image: google/cadvisor:latest
    volumes: 
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks: 
      - cmsfs
    ports: 
      - "8080:8080"

  # grafana:
  #   container_name: cmsfs_grafana
  #   image: grafana/grafana
  #   ports: 
  #     - "3000:3000"
  #   environment: 
  #     - GF_SECURITY_ADMIN_PASSWORD=123456aA+ 

  # elasticsearch:
  #   container_name: cmsfs_elasticsearch
  #   image: elasticsearch
  #   ports: 
  #     - "9300:9300"

networks: 
   cmsfs: